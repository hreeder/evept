stages:
  - backend-compile
  - backend-deploy
  - frontend
  - deploy

backend-compile-characterUpdater:
  stage: backend-compile
  image: golang
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends zip
    - cd backend/characterUpdater
  script:
    - make package
  artifacts:
    expire_in: 1 day
    untracked: true

backend-serverless:
  stage: backend-deploy
  image: python:3.6
  before_script:
    - git clone https://github.com/nodesource/distributions.git
    - chmod +x distributions/deb/setup_10.x
    - ./distributions/deb/setup_10.x
    - apt-get install -y nodejs jq
    - cd backend
    - npm install
    - mkdir .build
  script:
    - node_modules/.bin/serverless deploy
    - "cat .build/stack.json | jq '{endpoint: .ServiceEndpoint}' > ../stack.json"
  artifacts:
    expire_in: 1 day
    paths:
      - stack.json

frontend-build:
  stage: frontend
  image: node:11
  before_script:
    - apt-get update && apt-get install -y jq
    - cd client
    - yarn
  script:
    - "export REACT_APP_APIGW_ENDPOINT=$(cat ../stack.json | jq '.endpoint')"
    - yarn build
  artifacts:
    expire_in: 1 day
    paths:
      - client/build

frontend-deploy-prod:
  stage: deploy
  image: python:3.6
  before_script:
    - pip install awscli
    - cd client
  script:
    - aws s3 sync build s3://evept.err.wtf --acl public-read
  environment:
    name: prod
    url: http://evept.err.wtf
  only:
    - master